<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBGRXhpZgAATU0AKgAAAAgABAESAAMAAAABAAEAAFEQAAEAAAAB
        AQAAAFERAAQAAAABAAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYE
        BAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcI
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAhAV4D
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD97Na1KW3nigh2xmQF3lYZ2KMDAHdjnjPA
        wSc8Awx3rKmDdTt7nZk/korP8eXTW91Aqu0ZkicBlxuXleRkEZHuCPavi/8A4KU/ts+K/wDgn5oHhHxZ
        NrGo6h4H8Qau2iajetplpcS6HctEZbdnSOJWkgkWK4DMvzoY0AEhkAHHiq2KhaODwtTESd/dpcjk7K+k
        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
</value>
  </data>
</root>